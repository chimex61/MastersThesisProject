Wymagania dla Currennt'a (dla MSVS 2013)

1) Instalacja CUDA v6.5 od NVidia dla naszego systemu operacyjnego (https://developer.nvidia.com/cuda-toolkit-65).
Nie ma Windowsa 10, bo gdy wychodzi³a ta wersja to jeszcze nie by³o 10-tki. Ale dzia³a ta wersja dla Windowsa 8.1. Musisz sprawdziæ swoje GPU. 
Nale¿y uwa¿aæ, bo dla GPU GeForce GTX9xx (gdzie xx to dowolne cyfry), jest inna instalacja CUDY v6.5 (https://developer.nvidia.com/cuda-downloads-geforce-gtx9xx)
¯eby zaoszczêdziæ ci bardzo mozolnej zabawy z CMake'iem musisz zainstalowaæ CUDÊ pod t¹ sam¹ œcie¿k¹ co u mnie, tak aby zgadza³y siê scie¿ki do wszystkich libów.
Jest to lokalizacja: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v6.5  (powinna to byæ domyœlna œcie¿ka instalacji).


2) Instalacja Boosta wersja 1.60 (mo¿na œci¹gn¹æ z "https://sourceforge.net/projects/boost/files/boost/1.60.0/"). 

	2.1) Skopiowanie folderu z boostem pod tzw. boost root directory czyli "C:\Program Files\boost\boost_1_60_0". Tutaj te¿ musisz zrobiæ to koniecznie pod t¹ scie¿k¹.

	2.2) Trzeba podaæ Visual'owi œcie¿ki do boosta, w tym celu:

	- From Visual Studio's File menu, select New > Project…

	- In the left-hand pane of the resulting New Project dialog, select Visual C++ > Win32.

 	- In the right-hand pane, select Win32 Console Application (VS8.0) or Win32 Console Project (VS7.1).

	- In the name field, enter “example”

	- Right-click example in the Solution Explorer pane and select Properties from the resulting pop-up menu

	- In Configuration Properties > C/C++ > General > Additional Include Directories, enter the path to the Boost root directory, for example
		
	"C:\Program Files\boost\boost_1_60_0"
 
	- In Configuration Properties > C/C++ > Precompiled Headers, change Use Precompiled Header (/Yu) to Not Using Precompiled Headers.

	- Replace the contents of the example.cpp generated by the IDE with the example code below.

	- From the Build menu, select Build Solution.


	- To test your application, hit the F5 key and type the following into the resulting window, followed by the Return key:

	1 2 3
	Then hold down the control key and press "Z", followed by the Return key.



	example.cpp:

	#include <boost/lambda/lambda.hpp>
	#include <iostream>
	#include <iterator>
	#include <algorithm>

	int main()
	{
  	  using namespace boost::lambda;
  	  typedef std::istream_iterator<int> in;
	
  	  std::for_each(
  	      in(std::cin), in(), std::cout << (_1 * 3) << " " );
	}


	
	2.3) Niektóre biblioteki boost'a trzeba kompilowaæ oddzielnie (s¹ to tzw. separately-compiled Boost libraries). Currennt wykorzystuje akurat te biblioteki,
	wiêc nale¿y:
	
	- Uruchomiæ command line jak administrator (prawy przycisk myszy -> Uruchom jako Administrator)

	- Zmieniamy œcie¿kê na boost root directory czyli "cd C:\",  "cd Program Files",  "cd boost",  "cd boost_1_60_0"

	- Wpisujemy: "bjam --toolset=msvc-12.0 address-model=64 --build-type=complete stage" i ca³y boost zacznie siê kompilowaæ, ok. 15 minut.


3) Caly CMake powinien byæ za³atwiony, wszystkie flagi i œcie¿ki poustawiane, dodatkowe liby skopiowane, projekt skonfigurowany w architekturze x64, wiêc powinno dzia³aæ.
Nie chcia³em zamieszczaæ ci tu wszystkich kroków, które musia³em wykonaæ ¿eby to dzia³a³o, bo instrukcja by³aby 5 razy d³u¿sza - chcemy jedynie minimum, aby ci siê kompilowa³o.
Je¿eli dostaniesz jakiekolwiek b³êdy przy kompilacji currennt'a (buduj w release x64), to daj znaæ - bêdziemy kombinowaæ.


